using System;

namespace C_sharp_lab_6
{
    class Example
    {
        /*
        Добавьте в проект класс Example, методы которого будут использоваться для примера передачи параметров-значений.
        Создайте открытый статический метод Sqr, принимающий в качестве параметров два значения типа double и не возвращающий значения.
        Этот метод будет возводить два числа в квадрат и выводить результат на экран (для этого используется статический метод Pow класса Math).
        {
           a = Math.Pow(a, 2);
           b = Math.Pow(b, 2);
           Console.WriteLine("В методе Sqr. a = {0}\tb = {1}", a, b);
        }
        В методе Main создайте и инициализируйте две переменных типа double. Выведите на консоль значения переменных, затем вызовите метод Sqr,
        указав их в качестве аргументов, после чего повторите вывод на экран. 
        Теперь снова вызовите метод Sqr, в параметрах указав удвоенные исходные переменные. Покажите значения переменных в конце функции Main.
            Example.Sqr(x * 2, y * 2);
            Console.WriteLine("В методе Main: a = {0}\tb = {1}", a, b);
        Скомпилируйте программу и посмотрите результаты работы

        Объявите в классе два открытых поля типа int.
        Создайте открытый конструктор, принимающий один параметр целочисленного типа и инициализирующий одно из полей этим значением.
            public int x;
            public int y;
            public Example(int x)
            {
            this.x = x;
            }

        Добавьте в класс Example статический метод с именем Init, принимающий в качестве параметра экземпляр этого же класса и не возвращающий
        ничего в вызывающую функцию. Метод должен присваивать обоим полям объекта-параметра значения, равные 1.
        В теле метода так же предусмотрите вывод на консоль значений полей объекта-параметра после их изменения.
        В методе Main создайте объект класса Example, передав его конструктору неединичное значение;
        Выведите на консоль значения полей созданного объекта;
        Передайте только что созданный объект статическому методу Init после чего посмотрите значения его полей с помощью метода Console.WriteLine();
            Console.WriteLine("В методе Main: Obj.x = {0}\tObj.y = {1}", Obj.x, Obj.y);
            Example.Init(Obj);
            Console.WriteLine("В методе Main: Obj.x = {0}\tObj.y = {1}", Obj.x, Obj.y);
        Скомпилируйте измененную программу и посмотрите результат её работы.
        Измените метод Init таким образом, чтобы он создавал новый объект класса Example, и присваивал его передаваемому в метод параметру.
        После этого, как и раньше, полям объекта должны присваиваться новые значения, которые будут выведены на консоль в теле метода. 
        */

        public int x;
        public int y;

        public Example(int x)
        {
            this.x = x;
        }

        public static void init(Example obj)
        {
            Example newobj = new Example(11);
            obj = newobj;

            obj.x = 1;
            obj.y = 1;

            Console.WriteLine("После метода init.\t x = {0}\ty = {1}", obj.x, obj.y);
        }

        public static void sqr(double x, double y)
        {
            x = Math.Pow(x, 2);
            y = Math.Pow(y, 2);
            Console.WriteLine("В методе sqr.\t\t x = {0}\ty = {1}", x, y);
        }
    }
}
